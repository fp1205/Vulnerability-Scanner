#!/bin/python3

import socket
from IPy import IP
import pyfiglet
import subprocess
import time
from datetime import datetime
subprocess.call('clear', shell=True)

Port_Scanner_Banner = pyfiglet.figlet_format("PORT SCANNER")
print(Port_Scanner_Banner)

time.sleep(1)
#list to store open ports
ports = [] 

#list to store discovered banners   

banners = [] 
def scan(target):
        converted_ip = convert_ip(target)
        print('\n' + 'Scanning Target : ' + str(target))
        for port in range(int(start_port),int(end_port)):
                scan_port(converted_ip, port)
def convert_ip(ip):
 try:
                 IP(ip)
                 return(ip)

except:
                 return socket.gethostbyname(ip)
#def get_banner(s):
# '''///function grabs any port banner and returns the data received//'''
#          return s.recv(1024)
def scan_port(ipaddress, port):
        try:
                 sock = socket.socket()
                 sock.settime(0.1)
                 sock.connect((ipaddress, port))

                 try:
                      ports.append(port)
                      banner = sock.recv(1024).decode().strip('\n').strip('\r')
                      banners.append(banner)
                 except: 
                    pass
#//scan multiple targets specified with a comma else scan one specified target//
#//line 58 prevents the scan function from being called twice if the script is

if __name__== "__main__":
    targets = input('[+] Enter Target/s To Scan(for multiple targets use a comma):  ')
    start_port = input('enter the port to start the scan: ')
    end_port = input('enter the port to end the scan: ')
    #check start time
    time_start = datetime.now().replace(microsecond=0)
    print("scanning started at:" + str(time_start))
         if ',' in targets:
                for ip_address in targets.split(','):
                        scan(ip_address.script(' '))
        else:
                scan(targets)

with open("vulnerable_banners.txt", 'r') as file: 
 count = 0 

    for banner in banners: 

        file.seek(0) 

        for line in file.readlines(): 

            if line.strip() in banner: 

                print('[!!] VULNERABLE BANNER: "' + banner + '" ON 
PORT: ' + str(ports[count]))    

        count += 1 
#check completed time 
time_completed = datetime.now().replace(microsecond=0)

#Total time the scan took
time_total = time_completed - time_start

print("scanning ended at:" + str(time_completed))
print("scanning completed in " +(time_total))

